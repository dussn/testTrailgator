{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst auth = jwt => {\n  const cookies = new Cookies();\n\n  if (jwt) {\n    //formats token to post to server\n    var token = {\n      code: jwt\n    };\n    cookie.set(\"isAuth\", false); //send post request to backend under /auth\n\n    axios //post to localhost/auth\n    .post(\"http://localhost:3001/auth\", token).then(function (response) {\n      if (response.data != false) {\n        //checks the return is not false \n        cookies.set('isAuth', true);\n        cookies.set('role', response.data.role);\n        cookies.set('email', response.data.username);\n      } else {\n        cookies.set('isAuth', false);\n        cookies.remove('token');\n        cookies.remove('role');\n        cookies.remove('email');\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  } else {\n    cookies.set('isAuth', false);\n    cookies.remove('token');\n    cookies.remove('role');\n    cookies.remove('email');\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["C:/Users/dusti/Documents/GitHub/Trail-Gators/client/src/Login/auth.js"],"names":["axios","Cookies","auth","jwt","cookies","token","code","cookie","set","post","then","response","data","role","username","remove","catch","err","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAqB,kBAArB;;AAEA,MAAMC,IAAI,GAAIC,GAAD,IAAS;AAClB,QAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;;AACA,MAAGE,GAAH,EAAO;AACH;AACA,QAAIE,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEH;AADE,KAAZ;AAGAI,IAAAA,MAAM,CAACC,GAAP,CAAW,QAAX,EAAoB,KAApB,EALG,CAMH;;AACAR,IAAAA,KAAK,CAAC;AAAD,KACJS,IADD,CACM,4BADN,EACmCJ,KADnC,EAECK,IAFD,CAEM,UAAUC,QAAV,EAAoB;AAClB,UAAGA,QAAQ,CAACC,IAAT,IAAiB,KAApB,EACA;AACI;AACAR,QAAAA,OAAO,CAACI,GAAR,CAAY,QAAZ,EAAqB,IAArB;AACAJ,QAAAA,OAAO,CAACI,GAAR,CAAY,MAAZ,EAAmBG,QAAQ,CAACC,IAAT,CAAcC,IAAjC;AACAT,QAAAA,OAAO,CAACI,GAAR,CAAY,OAAZ,EAAoBG,QAAQ,CAACC,IAAT,CAAcE,QAAlC;AACH,OAND,MAOK;AACDV,QAAAA,OAAO,CAACI,GAAR,CAAY,QAAZ,EAAqB,KAArB;AACAJ,QAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACAX,QAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACAX,QAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACH;AACJ,KAhBL,EAiBKC,KAjBL,CAiBWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAnBL;AAoBH,GA3BD,MA4BK;AACDb,IAAAA,OAAO,CAACI,GAAR,CAAY,QAAZ,EAAqB,KAArB;AACAJ,IAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACAX,IAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACAX,IAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACH;AACJ,CApCD;;AAsCA,eAAeb,IAAf","sourcesContent":["import axios from 'axios';\r\nimport Cookies  from 'universal-cookie';\r\n\r\nconst auth = (jwt) => {\r\n    const cookies = new Cookies();\r\n    if(jwt){\r\n        //formats token to post to server\r\n        var token = {\r\n            code: jwt\r\n        }\r\n        cookie.set(\"isAuth\",false);\r\n        //send post request to backend under /auth\r\n        axios //post to localhost/auth\r\n        .post(\"http://localhost:3001/auth\",token)\r\n        .then(function (response) {\r\n                if(response.data != false)\r\n                {\r\n                    //checks the return is not false \r\n                    cookies.set('isAuth',true);\r\n                    cookies.set('role',response.data.role);\r\n                    cookies.set('email',response.data.username);               \r\n                }\r\n                else {\r\n                    cookies.set('isAuth',false);\r\n                    cookies.remove('token');\r\n                    cookies.remove('role');\r\n                    cookies.remove('email');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    else {\r\n        cookies.set('isAuth',false);\r\n        cookies.remove('token');\r\n        cookies.remove('role');\r\n        cookies.remove('email');\r\n    }\r\n}\r\n\r\nexport default auth;"]},"metadata":{},"sourceType":"module"}