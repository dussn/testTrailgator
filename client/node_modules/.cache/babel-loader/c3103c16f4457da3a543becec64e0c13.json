{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst auth = async login => {\n  var cookies = new Cookies();\n  var jwt = cookies.get('token');\n  console.log(\"attempting to auth\");\n\n  if (jwt) {\n    //formats token to post to server\n    var token = {\n      code: jwt\n    };\n    cookies.set(\"isAuth\", false); //send post request to backend under /auth\n\n    axios //post to localhost/auth\n    .post(\"http://localhost:3001/auth\", token).then(function (response) {\n      if (response.data != false) {\n        setTimeout(() => {\n          console.log(\"authenticated\");\n        }, 10); //console.log()\n        //checks the return is not false \n\n        cookies.set('isAuth', true);\n        cookies.set('role', response.data.role);\n        cookies.set('email', response.data.username);\n        if (login) window.location.reload();\n      } else {\n        cookies.set('isAuth', false);\n        cookies.remove('token');\n        cookies.remove('role');\n        cookies.remove('email');\n        window.location.reload();\n      } //window.location.reload();\n\n    }).catch(err => {\n      console.error(err);\n      cookies.remove('token');\n      cookies.remove('role');\n      cookies.remove('email');\n      window.location.reload();\n    });\n  } else {\n    cookies.remove('token');\n    cookies.remove('role');\n    cookies.remove('email');\n\n    if (cookies.get('isAuth') == \"true\" || cookies.get('token')) {\n      cookies.set('isAuth', false);\n      window.location.reload();\n    }\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["C:/Users/dusti/Documents/GitHub/Trail-Gators/client/src/Login/auth.js"],"names":["axios","Cookies","auth","login","cookies","jwt","get","console","log","token","code","set","post","then","response","data","setTimeout","role","username","window","location","reload","remove","catch","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAqB,kBAArB;;AAEA,MAAMC,IAAI,GAAI,MAAOC,KAAP,IAAiB;AAC3B,MAAIC,OAAO,GAAG,IAAIH,OAAJ,EAAd;AACA,MAAII,GAAG,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAGH,GAAH,EAAO;AACH;AACA,QAAII,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEL;AADE,KAAZ;AAGAD,IAAAA,OAAO,CAACO,GAAR,CAAY,QAAZ,EAAqB,KAArB,EALG,CAMH;;AACAX,IAAAA,KAAK,CAAC;AAAD,KACJY,IADD,CACM,4BADN,EACmCH,KADnC,EAECI,IAFD,CAEM,UAAUC,QAAV,EAAoB;AAClB,UAAGA,QAAQ,CAACC,IAAT,IAAiB,KAApB,EACA;AACIC,QAAAA,UAAU,CAAC,MAAM;AAAGT,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA+B,SAAzC,EAA2C,EAA3C,CAAV,CADJ,CAEI;AACA;;AACAJ,QAAAA,OAAO,CAACO,GAAR,CAAY,QAAZ,EAAqB,IAArB;AACAP,QAAAA,OAAO,CAACO,GAAR,CAAY,MAAZ,EAAmBG,QAAQ,CAACC,IAAT,CAAcE,IAAjC;AACAb,QAAAA,OAAO,CAACO,GAAR,CAAY,OAAZ,EAAoBG,QAAQ,CAACC,IAAT,CAAcG,QAAlC;AACA,YAAGf,KAAH,EAAUgB,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACb,OATD,MAUK;AACDjB,QAAAA,OAAO,CAACO,GAAR,CAAY,QAAZ,EAAqB,KAArB;AACAP,QAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;AACAlB,QAAAA,OAAO,CAACkB,MAAR,CAAe,MAAf;AACAlB,QAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;AACAH,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAjBiB,CAkBlB;;AACH,KArBL,EAsBKE,KAtBL,CAsBWC,GAAG,IAAI;AACVjB,MAAAA,OAAO,CAACkB,KAAR,CAAcD,GAAd;AACApB,MAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;AACAlB,MAAAA,OAAO,CAACkB,MAAR,CAAe,MAAf;AACAlB,MAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;AACAH,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KA5BL;AA8BH,GArCD,MAsCK;AAEDjB,IAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;AACAlB,IAAAA,OAAO,CAACkB,MAAR,CAAe,MAAf;AACAlB,IAAAA,OAAO,CAACkB,MAAR,CAAe,OAAf;;AACA,QAAGlB,OAAO,CAACE,GAAR,CAAY,QAAZ,KAAuB,MAAvB,IAAiCF,OAAO,CAACE,GAAR,CAAY,OAAZ,CAApC,EAAyD;AACrDF,MAAAA,OAAO,CAACO,GAAR,CAAY,QAAZ,EAAqB,KAArB;AACAQ,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAEJ;AACJ,CArDD;;AAuDA,eAAenB,IAAf","sourcesContent":["import axios from 'axios';\r\nimport Cookies  from 'universal-cookie';\r\n\r\nconst auth =  async (login) => {\r\n    var cookies = new Cookies();\r\n    var jwt = cookies.get('token');\r\n    console.log(\"attempting to auth\")\r\n    if(jwt){\r\n        //formats token to post to server\r\n        var token = {\r\n            code: jwt\r\n        }\r\n        cookies.set(\"isAuth\",false);\r\n        //send post request to backend under /auth\r\n        axios //post to localhost/auth\r\n        .post(\"http://localhost:3001/auth\",token)\r\n        .then(function (response) {\r\n                if(response.data != false)\r\n                {   \r\n                    setTimeout(() => {  console.log(\"authenticated\"); }, 10);\r\n                    //console.log()\r\n                    //checks the return is not false \r\n                    cookies.set('isAuth',true);\r\n                    cookies.set('role',response.data.role);\r\n                    cookies.set('email',response.data.username);\r\n                    if(login) window.location.reload();            \r\n                }\r\n                else {\r\n                    cookies.set('isAuth',false);\r\n                    cookies.remove('token');\r\n                    cookies.remove('role');\r\n                    cookies.remove('email');\r\n                    window.location.reload();\r\n                }\r\n                //window.location.reload();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                cookies.remove('token');\r\n                cookies.remove('role');\r\n                cookies.remove('email');\r\n                window.location.reload();\r\n            });\r\n            \r\n    }\r\n    else {\r\n        \r\n        cookies.remove('token');\r\n        cookies.remove('role');\r\n        cookies.remove('email');\r\n        if(cookies.get('isAuth')==\"true\" || cookies.get('token')){\r\n            cookies.set('isAuth',false);\r\n            window.location.reload();\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport default auth;"]},"metadata":{},"sourceType":"module"}