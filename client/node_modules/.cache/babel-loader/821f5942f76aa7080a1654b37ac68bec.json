{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dusti\\\\Documents\\\\GitHub\\\\Trail-Gators\\\\client\\\\src\\\\Admin\\\\settings.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Cookies from 'universal-cookie'; //import Compress from \"react-image-file-resizer\";\n\nimport Compress from \"browser-image-compression\";\nimport \"./settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      //need to edit a json on database\n      //axios.post('http://localhost:3001/settings/addmember')\\\n      //imageUpload(this.state.image);\n      //localStorage.setItem(\"test\",getBase64(this.state.image))\n      //imageUpload(this.)\n      //alert(this.state.image)\n\n      /*const cookies = new Cookies();\r\n      const member = {\r\n          name: this.state.name,\r\n          postion: this.state.position,\r\n          email: this.state.email,\r\n          image: uri\r\n      }\r\n      const request = {\r\n          code: cookies.get(\"token\"),\r\n          member: member\r\n      }\r\n      localStorage.setItem(\"img\",uri)\r\n      alert(\"sending\")\r\n      /*axios.post('http://localhost:3001/settings/addmember',request)\r\n          .then(function (response) {\r\n              alert(response.data)\r\n          });\r\n           },\r\n      \"base64\" // blob or base64 default base64\r\n      );\r\n      /*getBase64(this.state.image).then(base64 => {\r\n      const cookies = new Cookies();\r\n      const member = {\r\n          name: this.state.name,\r\n          postion: this.state.position,\r\n          email: this.state.email,\r\n          image: base64\r\n      }\r\n      const request = {\r\n          code: cookies.get(\"token\"),\r\n          member: member\r\n      }\r\n      axios.post('http://localhost:3001/settings/addmember',request)\r\n          .then(function (response) {\r\n              alert(response.data)\r\n          });\r\n      \r\n      })*/\n      const file = e.target.files[0]; //alert(this.state.image)\n      // Compression config\n\n      const options = {\n        // As the key specify the maximum size\n        // Leave blank for infinity\n        maxSizeMB: .5,\n        // Use webworker for faster compression with\n        // the help of threads\n        useWebWorker: true\n      }; // Initialize compression\n      // First argument is the file object from the input\n      // Second argument is the options object with the\n      // config\n\n      Compress(file, options).then(compressedBlob => {\n        // Compressed file is of Blob type\n        // You can drop off here if you want to work with a Blob file\n        console.log(compressedBlob);\n        alert(compressedBlob); // If you want to work with the File\n        // Let's convert it here, by adding a couple of attributes\n\n        compressedBlob.lastModifiedDate = new Date(); // Conver the blob to file\n\n        const convertedBlobFile = new File([compressedBlob], file.name, {\n          type: file.type,\n          lastModified: Date.now()\n        });\n        var reader = new FileReader();\n        reader.readAsDataURL(convertedBlobFile);\n\n        reader.onloadend = function () {\n          var base64data = reader.result;\n          localStorage.setItem(\"img\", base64data);\n        }; // Here you are free to call any method you are gonna use to upload your file example uploadToCloudinaryUsingPreset(convertedBlobFile)\n\n      }).catch(e => {// Show the user a toast message or notification that something went wrong while compressing file\n      });\n    };\n\n    this.state = {\n      name: '',\n      position: '',\n      email: '',\n      image: {\n        file: null\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); //this.onChange = this.onChange.bind(this);\n  }\n\n  handleChange(event) {\n    //alert(event.target.placeholder)\n    switch (event.target.name) {\n      case \"name\":\n        this.setState({\n          name: event.target.value\n        });\n        break;\n\n      case \"position\":\n        this.setState({\n          position: event.target.value\n        });\n        break;\n\n      case \"email\":\n        this.setState({\n          email: event.target.value\n        });\n        break;\n\n      case \"file\":\n        this.setState({\n          image: event.target.files[0]\n        });\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cotainer-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/\",\n              children: \" Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/calendar\",\n              children: \" Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/profile\",\n              children: \" Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/signout\",\n              children: \" Sign Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Add Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              placeholder: \"Name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"position\",\n              placeholder: \"Position\",\n              value: this.state.position,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\",\n              id: \"input-files\",\n              className: \"form-control-file border\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            type: \"submit\",\n            value: \"Add Member\",\n            name: \"submit button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n} //used code from https://bezkoder.com/node-js-upload-store-images-mongodb/\n\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/dusti/Documents/GitHub/Trail-Gators/client/src/Admin/settings.js"],"names":["React","axios","Cookies","Compress","Settings","Component","constructor","props","handleSubmit","e","file","target","files","options","maxSizeMB","useWebWorker","then","compressedBlob","console","log","alert","lastModifiedDate","Date","convertedBlobFile","File","name","type","lastModified","now","reader","FileReader","readAsDataURL","onloadend","base64data","result","localStorage","setItem","catch","state","position","email","image","handleChange","bind","event","setState","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport Cookies  from 'universal-cookie';\r\n//import Compress from \"react-image-file-resizer\";\r\nimport Compress from \"browser-image-compression\";\r\nimport \"./settings.css\";\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {name: '', position: '', email: '', image: {\r\n            file: null,\r\n        }};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      //this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    handleSubmit = async(e) =>{\r\n        //need to edit a json on database\r\n        //axios.post('http://localhost:3001/settings/addmember')\\\r\n        \r\n        //imageUpload(this.state.image);\r\n        //localStorage.setItem(\"test\",getBase64(this.state.image))\r\n        //imageUpload(this.)\r\n        //alert(this.state.image)\r\n\r\n            /*const cookies = new Cookies();\r\n            const member = {\r\n                name: this.state.name,\r\n                postion: this.state.position,\r\n                email: this.state.email,\r\n                image: uri\r\n            }\r\n            const request = {\r\n                code: cookies.get(\"token\"),\r\n                member: member\r\n            }\r\n            localStorage.setItem(\"img\",uri)\r\n            alert(\"sending\")\r\n            /*axios.post('http://localhost:3001/settings/addmember',request)\r\n                .then(function (response) {\r\n                    alert(response.data)\r\n                });\r\n       \r\n        },\r\n        \"base64\" // blob or base64 default base64\r\n        );\r\n        /*getBase64(this.state.image).then(base64 => {\r\n            const cookies = new Cookies();\r\n            const member = {\r\n                name: this.state.name,\r\n                postion: this.state.position,\r\n                email: this.state.email,\r\n                image: base64\r\n            }\r\n            const request = {\r\n                code: cookies.get(\"token\"),\r\n                member: member\r\n            }\r\n            axios.post('http://localhost:3001/settings/addmember',request)\r\n                .then(function (response) {\r\n                    alert(response.data)\r\n                });\r\n            \r\n            })*/\r\n        const file = e.target.files[0];\r\n        //alert(this.state.image)\r\n\r\n        // Compression config\r\n        const options = {\r\n            // As the key specify the maximum size\r\n            // Leave blank for infinity\r\n            maxSizeMB: .5,\r\n            // Use webworker for faster compression with\r\n            // the help of threads\r\n            useWebWorker: true\r\n        }\r\n\r\n        // Initialize compression\r\n        // First argument is the file object from the input\r\n        // Second argument is the options object with the\r\n        // config\r\n        Compress(file, options)\r\n            .then(compressedBlob => {\r\n                // Compressed file is of Blob type\r\n                // You can drop off here if you want to work with a Blob file\r\n                console.log(compressedBlob)\r\n                \r\n                alert(compressedBlob)\r\n                // If you want to work with the File\r\n                // Let's convert it here, by adding a couple of attributes\r\n                compressedBlob.lastModifiedDate = new Date()\r\n\r\n                 \r\n\r\n                // Conver the blob to file\r\n                const convertedBlobFile = new File([compressedBlob], file.name, { type: file.type, lastModified: Date.now()})\r\n                var reader = new FileReader();\r\n                    reader.readAsDataURL(convertedBlobFile); \r\n                    reader.onloadend = function() {\r\n                    var base64data = reader.result;                \r\n                    localStorage.setItem(\"img\",base64data)\r\n                    }\r\n                // Here you are free to call any method you are gonna use to upload your file example uploadToCloudinaryUsingPreset(convertedBlobFile)\r\n            })\r\n            .catch(e => {\r\n                // Show the user a toast message or notification that something went wrong while compressing file\r\n            })\r\n    }\r\n    handleChange(event) {\r\n        //alert(event.target.placeholder)\r\n        switch(event.target.name) {\r\n            case \"name\":\r\n                this.setState({name: event.target.value})\r\n                break;\r\n            case \"position\":\r\n                this.setState({position: event.target.value})\r\n                break;\r\n            case \"email\":\r\n                this.setState({email: event.target.value})\r\n                break;\r\n            case \"file\":\r\n                this.setState({image: event.target.files[0]})\r\n                break;\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = 'cotainer-fluid'>\r\n                    <nav>\r\n                        <div className=\"form-check form-check-inline nowrap\">\r\n                            <a className=\"nav-link\" href=\"/\"> Home</a> |\r\n                            <a className=\"nav-link\" href=\"/calendar\"> Calendar</a> |\r\n                            <a className=\"nav-link\" href=\"/profile\"> Profile</a> |\r\n                            <a className=\"nav-link\" href=\"/signout\"> Sign Out</a>\r\n                        </div>  \r\n                    </nav>\r\n                </div> \r\n                <br></br>\r\n                <div className = \"container-fluid\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h4>Add Member</h4>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control'name = 'name' placeholder = 'Name' value={this.state.name}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control' name = 'position' placeholder = 'Position' value={this.state.position}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control' name = 'email' placeholder = 'Email' value={this.state.email}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        \r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"input-files\"\r\n                            className=\"form-control-file border\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <input className = 'submit' type=\"submit\" value = 'Add Member'  name = \"submit button\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n    );}\r\n    \r\n}\r\n\r\n//used code from https://bezkoder.com/node-js-upload-store-images-mongodb/\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}