{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dusti\\\\Documents\\\\GitHub\\\\Trail-Gators\\\\client\\\\src\\\\Admin\\\\settings.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Cookies from 'universal-cookie'; //import Compress from \"react-image-file-resizer\";\n\nimport Compress from \"browser-image-compression\";\nimport auth from '../Login/auth';\nimport \"./settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      const cookies = new Cookies();\n      const jwt = cookies.get('token');\n      auth(jwt);\n      const member = {\n        name: this.state.name,\n        position: this.state.position,\n        about: this.state.about,\n        email: this.state.email,\n        image: localStorage.getItem(\"img\")\n      };\n      const request = {\n        code: jwt,\n        member: member\n      };\n      axios.post('http://localhost:3001/settings/addmember', request).then(function (response) {\n        alert(response.data);\n      });\n    };\n\n    this.onChange = e => {\n      // Get the files selected from the input tag\n      // On select files always come in an array even\n      // if you choose one its the first index\n      // if you selected a couple then loop through the array\n      const file = e.target.files[0]; // Compression config\n\n      const options = {\n        // As the key specify the maximum size\n        // Leave blank for infinity\n        maxSizeMB: 1,\n        // Use webworker for faster compression with\n        // the help of threads\n        useWebWorker: true\n      }; // Initialize compression\n      // First argument is the file object from the input\n      // Second argument is the options object with the\n      // config\n\n      Compress(file, options).then(compressedBlob => {\n        // Compressed file is of Blob type\n        // You can drop off here if you want to work with a Blob file\n        // If you want to work with the File\n        // Let's convert it here, by adding a couple of attributes\n        compressedBlob.lastModifiedDate = new Date(); // Convert the blob to file\n\n        const convertedBlobFile = new File([compressedBlob], file.name, {\n          type: file.type,\n          lastModified: Date.now()\n        }); //convert to base64 then set this state image to the base64\n\n        var reader = new FileReader();\n        reader.readAsDataURL(convertedBlobFile);\n\n        reader.onloadend = function () {\n          var base64data = reader.result;\n          localStorage.setItem(\"img\", base64data);\n        }; // Here you are free to call any method you are gonna use to upload your file example uploadToCloudinaryUsingPreset(convertedBlobFile)\n\n      }).catch(e => {\n        console.log(e); // Show the user a toast message or notification that something went wrong while compressing file\n      });\n    };\n\n    this.state = {\n      name: '',\n      position: '',\n      about: '',\n      email: '',\n      image: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  handleChange(event) {\n    //alert(event.target.placeholder)\n    switch (event.target.name) {\n      case \"name\":\n        this.setState({\n          name: event.target.value\n        });\n        break;\n\n      case \"position\":\n        this.setState({\n          position: event.target.value\n        });\n        break;\n\n      case \"about\":\n        this.setState({\n          about: event.target.value\n        });\n        break;\n\n      case \"email\":\n        this.setState({\n          email: event.target.value\n        });\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cotainer-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/\",\n              children: \" Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/calendar\",\n              children: \" Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/profile\",\n              children: \" Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/signout\",\n              children: \" Sign Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Add Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              placeholder: \"Name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"position\",\n              placeholder: \"Position\",\n              value: this.state.position,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              class: \"form-control\",\n              id: \"exampleFormControlTextarea1\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\",\n              id: \"input-files\",\n              className: \"form-control-file border\",\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            type: \"submit\",\n            value: \"Add Member\",\n            name: \"submit button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n} //used code from https://bezkoder.com/node-js-upload-store-images-mongodb/\n\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/dusti/Documents/GitHub/Trail-Gators/client/src/Admin/settings.js"],"names":["React","axios","Cookies","Compress","auth","Settings","Component","constructor","props","handleSubmit","e","cookies","jwt","get","member","name","state","position","about","email","image","localStorage","getItem","request","code","post","then","response","alert","data","onChange","file","target","files","options","maxSizeMB","useWebWorker","compressedBlob","lastModifiedDate","Date","convertedBlobFile","File","type","lastModified","now","reader","FileReader","readAsDataURL","onloadend","base64data","result","setItem","catch","console","log","handleChange","bind","event","setState","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAqB,kBAArB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,gBAAP;;;AAIA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJ,MAAMC,CAAN,IAAW;AAGtB,YAAMC,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,YAAMU,GAAG,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAZ;AACAT,MAAAA,IAAI,CAACQ,GAAD,CAAJ;AACI,YAAME,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADN;AAEXE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFV;AAGXC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHP;AAIXC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAJP;AAKXC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB;AALI,OAAf;AAOA,YAAMC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAEZ,GADM;AAEZE,QAAAA,MAAM,EAAEA;AAFI,OAAhB;AAIAb,MAAAA,KAAK,CAACwB,IAAN,CAAW,0CAAX,EAAsDF,OAAtD,EACKG,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBC,QAAAA,KAAK,CAACD,QAAQ,CAACE,IAAV,CAAL;AACP,OAHD;AAKP,KA9BkB;;AAAA,SA+BnBC,QA/BmB,GA+BPpB,CAAD,IAAO;AACd;AACA;AACA;AACA;AACA,YAAMqB,IAAI,GAAGrB,CAAC,CAACsB,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CALc,CAOd;;AACA,YAAMC,OAAO,GAAG;AACZ;AACA;AACAC,QAAAA,SAAS,EAAE,CAHC;AAIZ;AACA;AACAC,QAAAA,YAAY,EAAE;AANF,OAAhB,CARc,CAiBd;AACA;AACA;AACA;;AACAjC,MAAAA,QAAQ,CAAC4B,IAAD,EAAOG,OAAP,CAAR,CACKR,IADL,CACUW,cAAc,IAAI;AACpB;AACA;AACA;AACA;AACAA,QAAAA,cAAc,CAACC,gBAAf,GAAkC,IAAIC,IAAJ,EAAlC,CALoB,CAOpB;;AACA,cAAMC,iBAAiB,GAAG,IAAIC,IAAJ,CAAS,CAACJ,cAAD,CAAT,EAA2BN,IAAI,CAAChB,IAAhC,EAAsC;AAAE2B,UAAAA,IAAI,EAAEX,IAAI,CAACW,IAAb;AAAmBC,UAAAA,YAAY,EAAEJ,IAAI,CAACK,GAAL;AAAjC,SAAtC,CAA1B,CARoB,CASpB;;AACA,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACID,QAAAA,MAAM,CAACE,aAAP,CAAqBP,iBAArB;;AACAK,QAAAA,MAAM,CAACG,SAAP,GAAmB,YAAW;AAC9B,cAAIC,UAAU,GAAGJ,MAAM,CAACK,MAAxB;AACA7B,UAAAA,YAAY,CAAC8B,OAAb,CAAqB,KAArB,EAA2BF,UAA3B;AACC,SAHD,CAZgB,CAgBpB;;AACH,OAlBL,EAmBKG,KAnBL,CAmBW1C,CAAC,IAAI;AACR2C,QAAAA,OAAO,CAACC,GAAR,CAAY5C,CAAZ,EADQ,CAER;AACH,OAtBL;AAuBH,KA3EkB;;AAEjB,SAAKM,KAAL,GAAa;AAACD,MAAAA,IAAI,EAAE,EAAP;AAAWE,MAAAA,QAAQ,EAAE,EAArB;AAAyBC,MAAAA,KAAK,EAAE,EAAhC;AAAoCC,MAAAA,KAAK,EAAE,EAA3C;AAA+CC,MAAAA,KAAK,EAAE;AAAtD,KAAb;AACA,SAAKmC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK/C,YAAL,GAAoB,KAAKA,YAAL,CAAkB+C,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK1B,QAAL,GAAgB,KAAKA,QAAL,CAAc0B,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAsEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB;AACA,YAAOA,KAAK,CAACzB,MAAN,CAAajB,IAApB;AACI,WAAK,MAAL;AACI,aAAK2C,QAAL,CAAc;AAAC3C,UAAAA,IAAI,EAAE0C,KAAK,CAACzB,MAAN,CAAa2B;AAApB,SAAd;AACA;;AACJ,WAAK,UAAL;AACI,aAAKD,QAAL,CAAc;AAACzC,UAAAA,QAAQ,EAAEwC,KAAK,CAACzB,MAAN,CAAa2B;AAAxB,SAAd;AACA;;AACJ,WAAK,OAAL;AACI,aAAKD,QAAL,CAAc;AAACxC,UAAAA,KAAK,EAAEuC,KAAK,CAACzB,MAAN,CAAa2B;AAArB,SAAd;AACA;;AACJ,WAAK,OAAL;AACI,aAAKD,QAAL,CAAc;AAACvC,UAAAA,KAAK,EAAEsC,KAAK,CAACzB,MAAN,CAAa2B;AAArB,SAAd;AACA;AAZR;AAcH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,gBAAjB;AAAA,+BACI;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,UAAb;AAAwB,cAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,qBAEI;AAAG,cAAA,SAAS,EAAC,UAAb;AAAwB,cAAA,IAAI,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,qBAGI;AAAG,cAAA,SAAS,EAAC,UAAb;AAAwB,cAAA,IAAI,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,qBAII;AAAG,cAAA,SAAS,EAAC,UAAb;AAAwB,cAAA,IAAI,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAK,QAAA,SAAS,EAAG,iBAAjB;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAE,KAAKnD,YAArB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAG,kBAAjB;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAE,cAA9B;AAA4C,cAAA,IAAI,EAAG,MAAnD;AAA0D,cAAA,WAAW,EAAG,MAAxE;AAA+E,cAAA,KAAK,EAAE,KAAKO,KAAL,CAAWD,IAAjG;AAAwG,cAAA,QAAQ,EAAE,KAAKwC;AAAvH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,YAAA,SAAS,EAAG,kBAAjB;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAE,cAA9B;AAA6C,cAAA,IAAI,EAAG,UAApD;AAA+D,cAAA,WAAW,EAAG,UAA7E;AAAwF,cAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWC,QAA1G;AAAqH,cAAA,QAAQ,EAAE,KAAKsC;AAApI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAQI;AAAK,YAAA,SAAS,EAAG,kBAAjB;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAE,cAA9B;AAA6C,cAAA,IAAI,EAAG,OAApD;AAA4D,cAAA,WAAW,EAAG,OAA1E;AAAkF,cAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWG,KAApG;AAA4G,cAAA,QAAQ,EAAE,KAAKoC;AAA3H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARJ,eAWI;AAAK,YAAA,SAAS,EAAG,kBAAjB;AAAA,mCACI;AAAU,cAAA,KAAK,EAAC,cAAhB;AAA+B,cAAA,EAAE,EAAC,6BAAlC;AAAgE,cAAA,IAAI,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAcI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACI;AACA,cAAA,IAAI,EAAC,MADL;AAEA,cAAA,IAAI,EAAC,MAFL;AAGA,cAAA,EAAE,EAAC,aAHH;AAIA,cAAA,SAAS,EAAC,0BAJV;AAKA,cAAA,QAAQ,EAAE,KAAKzB;AALf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAuBI;AAAO,YAAA,SAAS,EAAG,QAAnB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAA0C,YAAA,KAAK,EAAG,YAAlD;AAAgE,YAAA,IAAI,EAAG;AAAvE;AAAA;AAAA;AAAA;AAAA,kBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CD;;AA1IgC,C,CA8IvC;;;AACA,eAAezB,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport Cookies  from 'universal-cookie';\r\n//import Compress from \"react-image-file-resizer\";\r\nimport Compress from \"browser-image-compression\";\r\nimport auth from '../Login/auth';\r\nimport \"./settings.css\";\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {name: '', position: '', about: '', email: '', image: ''};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    handleSubmit = async(e) =>{\r\n\r\n        \r\n        const cookies = new Cookies();\r\n        const jwt = cookies.get('token');\r\n        auth(jwt)\r\n            const member = {\r\n                name: this.state.name,\r\n                position: this.state.position,\r\n                about: this.state.about,\r\n                email: this.state.email,\r\n                image: localStorage.getItem(\"img\")\r\n            }\r\n            const request = {\r\n                code: jwt,\r\n                member: member\r\n            }\r\n            axios.post('http://localhost:3001/settings/addmember',request)\r\n                .then(function (response) {\r\n                    alert(response.data)\r\n            });\r\n        \r\n    }\r\n    onChange = (e) => {\r\n        // Get the files selected from the input tag\r\n        // On select files always come in an array even\r\n        // if you choose one its the first index\r\n        // if you selected a couple then loop through the array\r\n        const file = e.target.files[0]\r\n\r\n        // Compression config\r\n        const options = {\r\n            // As the key specify the maximum size\r\n            // Leave blank for infinity\r\n            maxSizeMB: 1,\r\n            // Use webworker for faster compression with\r\n            // the help of threads\r\n            useWebWorker: true\r\n        }\r\n\r\n        // Initialize compression\r\n        // First argument is the file object from the input\r\n        // Second argument is the options object with the\r\n        // config\r\n        Compress(file, options)\r\n            .then(compressedBlob => {\r\n                // Compressed file is of Blob type\r\n                // You can drop off here if you want to work with a Blob file\r\n                // If you want to work with the File\r\n                // Let's convert it here, by adding a couple of attributes\r\n                compressedBlob.lastModifiedDate = new Date()\r\n\r\n                // Convert the blob to file\r\n                const convertedBlobFile = new File([compressedBlob], file.name, { type: file.type, lastModified: Date.now()})\r\n                //convert to base64 then set this state image to the base64\r\n                var reader = new FileReader();\r\n                    reader.readAsDataURL(convertedBlobFile); \r\n                    reader.onloadend = function() {\r\n                    var base64data = reader.result;                \r\n                    localStorage.setItem(\"img\",base64data)\r\n                    }\r\n                // Here you are free to call any method you are gonna use to upload your file example uploadToCloudinaryUsingPreset(convertedBlobFile)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                // Show the user a toast message or notification that something went wrong while compressing file\r\n            })\r\n    }\r\n    handleChange(event) {\r\n        //alert(event.target.placeholder)\r\n        switch(event.target.name) {\r\n            case \"name\":\r\n                this.setState({name: event.target.value})\r\n                break;\r\n            case \"position\":\r\n                this.setState({position: event.target.value})\r\n                break;\r\n            case \"about\":\r\n                this.setState({about: event.target.value});\r\n                break;\r\n            case \"email\":\r\n                this.setState({email: event.target.value})\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = 'cotainer-fluid'>\r\n                    <nav>\r\n                        <div className=\"form-check form-check-inline nowrap\">\r\n                            <a className=\"nav-link\" href=\"/\"> Home</a> |\r\n                            <a className=\"nav-link\" href=\"/calendar\"> Calendar</a> |\r\n                            <a className=\"nav-link\" href=\"/profile\"> Profile</a> |\r\n                            <a className=\"nav-link\" href=\"/signout\"> Sign Out</a>\r\n                        </div>  \r\n                    </nav>\r\n                </div> \r\n                <br></br>\r\n                <div className = \"container-fluid\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h4>Add Member</h4>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control'name = 'name' placeholder = 'Name' value={this.state.name}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control' name = 'position' placeholder = 'Position' value={this.state.position}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className = 'input-group mb-3'>\r\n                            <input type=\"text\" className ='form-control' name = 'email' placeholder = 'Email' value={this.state.email}  onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className = 'input-group mb-3'>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"input-files\"\r\n                            className=\"form-control-file border\"\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <input className = 'submit' type=\"submit\" value = 'Add Member'  name = \"submit button\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n    );}\r\n    \r\n}\r\n\r\n//used code from https://bezkoder.com/node-js-upload-store-images-mongodb/\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}